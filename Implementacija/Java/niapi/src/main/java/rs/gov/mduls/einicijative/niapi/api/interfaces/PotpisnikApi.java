/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package rs.gov.mduls.einicijative.niapi.api.interfaces;

import rs.gov.mduls.einicijative.niapi.api.model.InicijativaZaPotpis;
import rs.gov.mduls.einicijative.niapi.api.model.PotpisnikPotpisOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.PotpisnikProfilOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.PotpisnikUpitListePotpisaOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.PotpisnikUpitPotpisaInicijativeOdgovor;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import jakarta.validation.Valid;

import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-09-17T13:23:05.888263500+01:00[Europe/London]")
@Validated
public interface PotpisnikApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /potpisnik/inicijativa/{idInicijative}
     * Provera detalja potpisa za inicijativu
     *
     * @param idInicijative  (required)
     * @return Detalji o potpisanoj inicijativi (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/potpisnik/inicijativa/{idInicijative}",
        produces = { "application/json" }
    )
     ResponseEntity<PotpisnikUpitPotpisaInicijativeOdgovor> potpisnikInicijativaIdInicijativeGet(
            @PathVariable("idInicijative") Long idInicijative
    ) throws Exception;

    /**
     * POST /potpisnik/potpis
     * Potpisnik potpisuje narodnu inicijativu online
     *
     * @param inicijativaZaPotpis  (required)
     * @return Detalji o potpisanoj inicijativi sa overom aplikacije (digitalnim potpisom) (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/potpisnik/potpis",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<PotpisnikPotpisOdgovor> potpisnikPotpisPost(
            @Valid @RequestBody InicijativaZaPotpis inicijativaZaPotpis
    ) throws Exception;


    /**
     * GET /potpisnik/potpisi
     * Provera detalja potpisa za inicijativu
     *
     * @return Lista potpisa za zadatog potpisnika (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/potpisnik/potpisi",
        produces = { "application/json" }
    )
    ResponseEntity<PotpisnikUpitListePotpisaOdgovor> potpisnikPotpisiGet() throws Exception;

    /**
     * GET /potpisnik/profil
     * Upit detalja profila potpisnika
     *
     * @return Detalji profila potpisnika (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/potpisnik/profil",
        produces = { "application/json" }
    )
    ResponseEntity<PotpisnikProfilOdgovor> potpisnikProfilGet() throws Exception;

}
