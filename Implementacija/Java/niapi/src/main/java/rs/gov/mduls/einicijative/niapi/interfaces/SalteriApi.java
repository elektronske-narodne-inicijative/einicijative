/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package rs.gov.mduls.einicijative.niapi.interfaces;

import rs.gov.mduls.einicijative.niapi.model.SalterskiPotpisOdgovor;
import rs.gov.mduls.einicijative.niapi.model.SalterskiPotpisZahtev;
import rs.gov.mduls.einicijative.niapi.model.SalterskiUpitInicijativeOdgovor;
import rs.gov.mduls.einicijative.niapi.model.SalterskiUpitListePotpisaOdgovor;
import rs.gov.mduls.einicijative.niapi.model.SalterskiUpitPotpisaInicijativeOdgovor;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;

import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-09-17T13:23:05.888263500+01:00[Europe/London]")
@Validated
public interface SalteriApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /salteri/inicijativa/{idInicijative}
     * Upit detalja za inicijativu
     *
     * @param idInicijative  (required)
     * @return Detalji o inicijativi (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/salteri/inicijativa/{idInicijative}",
        produces = { "application/json" }
    )
    default ResponseEntity<SalterskiUpitInicijativeOdgovor> salteriInicijativaIdInicijativeGet(
         @PathVariable("idInicijative") Long idInicijative
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"idInicijative\" : 0, \"datumAktiviranja\" : \"2000-01-23\", \"tipInicijative\" : \"tipInicijative\", \"nazivInicijative\" : \"nazivInicijative\", \"nivoVlasti\" : \"nivoVlasti\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /salteri/potpisnik/{jmbg}/inicijativa/{idInicijative}
     * Provera detalja potpisa za inicijativu
     *
     * @param jmbg  (required)
     * @param idInicijative  (required)
     * @return Detalji o potpisanoj inicijativi (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/salteri/potpisnik/{jmbg}/inicijativa/{idInicijative}",
        produces = { "application/json" }
    )
    default ResponseEntity<SalterskiUpitPotpisaInicijativeOdgovor> salteriPotpisnikJmbgInicijativaIdInicijativeGet(
        @Pattern(regexp = "^[0-9]{13}$") @Size(min = 13, max = 13)  @PathVariable("jmbg") String jmbg,
         @PathVariable("idInicijative") Long idInicijative
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"potpis\" : { \"idInicijative\" : 0, \"trnZavodjenjaPotpisa\" : \"2000-01-23T04:56:07.000+00:00\", \"nazivInicijative\" : \"nazivInicijative\", \"idPotpisa\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /salteri/potpisnik/{jmbg}/potpis
     * Potpisnik potpisuje narodnu inicijativu na salteru
     *
     * @param jmbg  (required)
     * @param salterskiPotpisZahtev  (required)
     * @return Uspesno potpisana inicijativa (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/salteri/potpisnik/{jmbg}/potpis",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<SalterskiPotpisOdgovor> salteriPotpisnikJmbgPotpisPost(
        @Pattern(regexp = "^[0-9]{13}$") @Size(min = 13, max = 13)  @PathVariable("jmbg") String jmbg,
         @Valid @RequestBody SalterskiPotpisZahtev salterskiPotpisZahtev
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"idInicijative\" : 0, \"trnZavodjenjaPotpisa\" : \"2000-01-23T04:56:07.000+00:00\", \"idPotpisa\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /salteri/potpisnik/{jmbg}/potpisi
     * Provera detalja potpisa za inicijativu
     *
     * @param jmbg  (required)
     * @return Lista potpisa za zadatog potpisnika (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/salteri/potpisnik/{jmbg}/potpisi",
        produces = { "application/json" }
    )
    default ResponseEntity<SalterskiUpitListePotpisaOdgovor> salteriPotpisnikJmbgPotpisiGet(
        @Pattern(regexp = "^[0-9]{13}$") @Size(min = 13, max = 13)  @PathVariable("jmbg") String jmbg
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"potpisi\" : [ { \"idInicijative\" : 0, \"trnZavodjenjaPotpisa\" : \"2000-01-23T04:56:07.000+00:00\", \"nazivInicijative\" : \"nazivInicijative\", \"idPotpisa\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, { \"idInicijative\" : 0, \"trnZavodjenjaPotpisa\" : \"2000-01-23T04:56:07.000+00:00\", \"nazivInicijative\" : \"nazivInicijative\", \"idPotpisa\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
