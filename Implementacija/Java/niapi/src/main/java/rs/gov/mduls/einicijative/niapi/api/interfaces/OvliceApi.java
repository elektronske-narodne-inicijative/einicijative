/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package rs.gov.mduls.einicijative.niapi.api.interfaces;

import rs.gov.mduls.einicijative.niapi.api.model.Obrazlozenje;
import rs.gov.mduls.einicijative.niapi.api.model.ObrazlozenjeSaSednice;
import rs.gov.mduls.einicijative.niapi.api.model.OvliceInicijativaOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.OvliceListaZaIshodOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.OvliceListaZaOdobrenjeOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.OvliceProfilOdgovor;
import rs.gov.mduls.einicijative.niapi.api.model.Uspeh;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import jakarta.validation.Valid;

import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-09-17T13:23:05.888263500+01:00[Europe/London]")
@Validated
public interface OvliceApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /ovlice/inicijativa/{idInicijative}
     * Detalji inicijative
     *
     * @param idInicijative  (required)
     * @return Detalji inicijative (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ovlice/inicijativa/{idInicijative}",
        produces = { "application/json" }
    )
    default ResponseEntity<OvliceInicijativaOdgovor> ovliceInicijativaIdInicijativeGet(
            @PathVariable("idInicijative") Long idInicijative
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"detaljiInicijative\" : { \"idInicijative\" : 0, \"trnOdbijanjaZahteva\" : \"2000-01-23T04:56:07.000+00:00\", \"fazaObrade\" : \"fazaObrade\", \"beleskaSaSednice\" : \"beleskaSaSednice\", \"trnZahteva\" : \"2000-01-23T04:56:07.000+00:00\", \"prilozi\" : [ { \"obrisan\" : true, \"urlPriloga\" : \"urlPriloga\", \"sortiranje\" : 1, \"nazivPriloga\" : \"nazivPriloga\" }, { \"obrisan\" : true, \"urlPriloga\" : \"urlPriloga\", \"sortiranje\" : 1, \"nazivPriloga\" : \"nazivPriloga\" } ], \"tekstInicijative\" : \"tekstInicijative\", \"razlogOdbijanjaZahteva\" : \"razlogOdbijanjaZahteva\", \"inicijator\" : \"inicijator\", \"promene\" : [ { \"trnPromene\" : \"2000-01-23T04:56:07.000+00:00\", \"fazaObrade\" : \"fazaObrade\", \"detaljiPromene\" : \"detaljiPromene\" }, { \"trnPromene\" : \"2000-01-23T04:56:07.000+00:00\", \"fazaObrade\" : \"fazaObrade\", \"detaljiPromene\" : \"detaljiPromene\" } ], \"nivoVlasti\" : \"nivoVlasti\", \"trnPodnosenja\" : \"2000-01-23T04:56:07.000+00:00\", \"tipInicijative\" : \"tipInicijative\", \"datumPokretanja\" : \"2000-01-23\", \"emailZaKontakt\" : \"emailZaKontakt\", \"datumOdluke\" : \"2000-01-23\", \"nazivInicijative\" : \"nazivInicijative\", \"jedinicaVlasti\" : \"jedinicaVlasti\", \"prihvacena\" : true, \"clanoviInicijativnogOdbora\" : [ { \"trnOdustajanjaOdClanstva\" : \"2000-01-23T04:56:07.000+00:00\", \"aktivan\" : true, \"imePrezime\" : \"imePrezime\", \"emailZaKontakt\" : \"emailZaKontakt\", \"biografija\" : \"biografija\", \"trnPrihvatanjaClanstva\" : \"2000-01-23T04:56:07.000+00:00\", \"godinaRodjenja\" : 6, \"pol\" : \"pol\" }, { \"trnOdustajanjaOdClanstva\" : \"2000-01-23T04:56:07.000+00:00\", \"aktivan\" : true, \"imePrezime\" : \"imePrezime\", \"emailZaKontakt\" : \"emailZaKontakt\", \"biografija\" : \"biografija\", \"trnPrihvatanjaClanstva\" : \"2000-01-23T04:56:07.000+00:00\", \"godinaRodjenja\" : 6, \"pol\" : \"pol\" } ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /ovlice/inicijativa/{idInicijative}/odbacena
     * Ovlašćeno lice obeležava da je pokrenuta narodna inicijativa odbačena od strane skupštine, uz opciono obrazloženje (beleške sa sednice skupštine)
     *
     * @param idInicijative  (required)
     * @param obrazlozenjeSaSednice  (required)
     * @return Uspeh (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/ovlice/inicijativa/{idInicijative}/odbacena",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Uspeh> ovliceInicijativaIdInicijativeOdbacenaPut(
            @PathVariable("idInicijative") Long idInicijative,
            @Valid @RequestBody ObrazlozenjeSaSednice obrazlozenjeSaSednice
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"poruka\" : \"poruka\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /ovlice/inicijativa/{idInicijative}/odbij
     * Ovlašćeno lice odbija zahtev za narodnu inicijativu uz obrazloženje
     *
     * @param idInicijative  (required)
     * @param obrazlozenje  (required)
     * @return Uspeh (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/ovlice/inicijativa/{idInicijative}/odbij",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Uspeh> ovliceInicijativaIdInicijativeOdbijPut(
            @PathVariable("idInicijative") Long idInicijative,
            @Valid @RequestBody Obrazlozenje obrazlozenje
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"poruka\" : \"poruka\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /ovlice/inicijativa/{idInicijative}/odobri
     * Ovlašćeno lice odobrava zahtev za narodnu inicijativu uz opciono obrazloženje
     *
     * @param idInicijative  (required)
     * @return Uspeh (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/ovlice/inicijativa/{idInicijative}/odobri",
        produces = { "application/json" }
    )
    default ResponseEntity<Uspeh> ovliceInicijativaIdInicijativeOdobriPut(
            @PathVariable("idInicijative") Long idInicijative
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"poruka\" : \"poruka\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /ovlice/inicijativa/{idInicijative}/prihvacena
     * Ovlašćeno lice obeležava da je pokrenuta narodna inicijativa prihvaćena, uz opciono obrazloženje (beleške sa sednice skupštine)
     *
     * @param idInicijative  (required)
     * @param obrazlozenjeSaSednice  (required)
     * @return Uspeh (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/ovlice/inicijativa/{idInicijative}/prihvacena",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Uspeh> ovliceInicijativaIdInicijativePrihvacenaPut(
            @PathVariable("idInicijative") Long idInicijative,
            @Valid @RequestBody ObrazlozenjeSaSednice obrazlozenjeSaSednice
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"poruka\" : \"poruka\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ovlice/inicijative/zaishod
     * Lista inicijativa koje čekaju ishod rasprave u skupštini na odgovarajućem nivou
     *
     * @return Lista inicijativa koje čekaju ishod (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ovlice/inicijative/zaishod",
        produces = { "application/json" }
    )
    default ResponseEntity<OvliceListaZaIshodOdgovor> ovliceInicijativeZaishodGet(
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"inicijativeZaIshod\" : [ { \"idInicijative\" : 0, \"brPotpisa\" : 1, \"trnPodnosenja\" : \"2000-01-23T04:56:07.000+00:00\", \"tipInicijative\" : \"tipInicijative\", \"datumPokretanja\" : \"2000-01-23\", \"trnZahteva\" : \"2000-01-23T04:56:07.000+00:00\", \"brInicijatora\" : 6, \"nazivInicijative\" : \"nazivInicijative\" }, { \"idInicijative\" : 0, \"brPotpisa\" : 1, \"trnPodnosenja\" : \"2000-01-23T04:56:07.000+00:00\", \"tipInicijative\" : \"tipInicijative\", \"datumPokretanja\" : \"2000-01-23\", \"trnZahteva\" : \"2000-01-23T04:56:07.000+00:00\", \"brInicijatora\" : 6, \"nazivInicijative\" : \"nazivInicijative\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ovlice/inicijative/zaodobrenje
     * Lista inicijativa koje čekaju odobrenje na odgovarajućem nivou
     *
     * @return Lista inicijativa koje čekaju odobrenje (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ovlice/inicijative/zaodobrenje",
        produces = { "application/json" }
    )
    default ResponseEntity<OvliceListaZaOdobrenjeOdgovor> ovliceInicijativeZaodobrenjeGet(
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"inicijativeZaOdobrenje\" : [ { \"idInicijative\" : 0, \"brPotpisa\" : 1, \"trnPodnosenja\" : \"2000-01-23T04:56:07.000+00:00\", \"tipInicijative\" : \"tipInicijative\", \"datumPokretanja\" : \"2000-01-23\", \"trnZahteva\" : \"2000-01-23T04:56:07.000+00:00\", \"brInicijatora\" : 6, \"nazivInicijative\" : \"nazivInicijative\" }, { \"idInicijative\" : 0, \"brPotpisa\" : 1, \"trnPodnosenja\" : \"2000-01-23T04:56:07.000+00:00\", \"tipInicijative\" : \"tipInicijative\", \"datumPokretanja\" : \"2000-01-23\", \"trnZahteva\" : \"2000-01-23T04:56:07.000+00:00\", \"brInicijatora\" : 6, \"nazivInicijative\" : \"nazivInicijative\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ovlice/profil
     * Upit detalja profila ovlašćenog lica
     *
     * @return Detalji profila ovlašćenog lica (status code 200)
     *         or Aplikativne greske (pogresan sadrzaj) (status code 400)
     *         or Neispravna ili istekla sesija (status code 401)
     *         or Neocekivane programske greske (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ovlice/profil",
        produces = { "application/json" }
    )
    default ResponseEntity<OvliceProfilOdgovor> ovliceProfilGet(
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"imePrezime\" : \"imePrezime\", \"nivoUprave\" : \"nivoUprave\", \"emailAdresa\" : \"emailAdresa\", \"opisJediniceUprave\" : \"opisJediniceUprave\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
